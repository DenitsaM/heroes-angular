@import  './variables.scss';
@import  './mixins.scss';

li{
    list-style-type: none;
}
.heroes-container{
    app-heroes-list{
        display: flex;
    }
}
.heroes-list{
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
    li{
        flex-shrink: 0;
        height: auto;

    }
    .ng-draggable{
        position: relative;
    }
    .settings-placeholder{
        width: 120px;
    }
}
.settings-placeholder{
    height: auto;
    position: relative;
    margin: 0;
    z-index: 1;
    img{
        width: 100%;
        height: auto;
    }
}
.heroes-img-placeholder{
    width: 120px;
    height: auto;
    position: relative;
    z-index: 10;
    img{
        width: 100%;
        height: auto;
    }
    .btn-outline-primary{
        display: none;
        position: absolute;
    }
    &.showClose{
        &:hover{
            .btn-outline-primary{
                display: block;
            }
        }
    }
}
.heroes-draggable{
    width: 120px;
    height: 270px;
}
.canvas-wrap{
    width: 1200px;
    height: 670px;
    border: 1px solid $main-grey;
    overflow: hidden;
    display: flex;
    flex-direction: row;
    position: relative;
    .ng-draggable{
        position: absolute;
    }
    .settings-placeholder{
        width: 100%;
    }
    .settings-list{
        align-self:center;
        width: 100%;
    }
    .save-canvas{
        position: absolute;
        z-index: 20;
    }
}
.heroes-content-wrap{
    min-width: 600px;
}
.saved-images-container{
    
    canvas{
        width: 601px !important;
        height: 336px !important;
    }
}
/* in-flight clone */
.gu-mirror {
    position: fixed !important;
    margin: 0 !important;
    z-index: 9999 !important;
    opacity: 0.8;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
    filter: alpha(opacity=80);
    pointer-events: none;
  }
  /* high-performance display:none; helper */
  .gu-hide {
    left: -9999px !important;
  }
  /* added to mirrorContainer (default = body) while dragging */
  .gu-unselectable {
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
  }
  /* added to the source element while its mirror is dragged */
  .gu-transit {
    opacity: 0.2;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter: alpha(opacity=20);
  }